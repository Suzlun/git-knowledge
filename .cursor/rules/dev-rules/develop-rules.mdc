---
description: 
globs: *.tsx,*.ts,*.jsx,*.js,*.json
alwaysApply: false
---

# コード規約

## 主要な原則
– 簡潔で技術的な回答を提供し、正確なTypeScriptの例を示すこと。
– 関数型および宣言型プログラミングを使用し、クラスは避けること。
– コードの重複を避け、イテレーションとモジュール化を優先すること。
– 補助動詞を用いた説明的な変数名を使用する（例：isLoading）。
– ディレクトリ名には小文字とダッシュを使用する（例：components/auth-wizard）。
– コンポーネントには名前付きエクスポートを優先する。
– オブジェクトを受け取り、オブジェクトを返す（RORO）パターンを使用する。
- package.jsonやpackage-lock.jsonを直接編集しない。
- 新しくパッケージを追加する際は`npm install`を用いて追加する。

## JavaScript/TypeScript
– 純粋な関数には「function」キーワードを使用し、セミコロンは省略する。
– すべてのコードにTypeScriptを使用し、型よりインターフェースを優先する。列挙型は避け、マップを使用する。
– ファイル構造：エクスポートされたコンポーネント、サブコンポーネント、ヘルパー、静的コンテンツ、型。
– 条件文では不要な中括弧を避ける。
– 条件文の単一行ステートメントでは中括弧を省略する。
– 簡潔な一行構文を使用する（例：if (condition) doSomething()）。